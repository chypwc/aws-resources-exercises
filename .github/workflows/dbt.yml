name: Deploy dbt-glue

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS Region"
        required: true
        default: "ap-southeast-2"
      SourceBucketName:
        description: "S3 Source Bucket Name"
        default: "source-bucket-chien"
        required: true
      DataBucketName:
        description: "S3 Data Bucket Name"
        default: "data-bucket-chien"
      deployAssumeRole:
        description: "Deploy Github action role?"
        default: "false"
        required: true

permissions:
  id-token: write # Required for OIDC
  contents: read # Allows checkout of source code
jobs:
  AssumeRole:
    if: ${{ github.event.inputs.deployAssumeRole == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        id: creds-pipeline
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      # - name: Get AWS account ID
      #   id: get-account
      #   run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> "$GITHUB_ENV"

      # - name: Compose parameter string
      #   run: |
      #     echo "PARAMS=AccountId=${{ secrets.AWS_ACCOUNT_ID }} GitHubRepo=${{ github.repository }} SourceBucketName=${{ github.event.inputs.SourceBucketName }} DataBucketName=${{ github.event.inputs.DataBucketName }}" >> $GITHUB_ENV

      - name: Deploy github action role
        id: github-action-role
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: github-action-role
          template: cfn/github-role.yml
          capabilities: CAPABILITY_NAMED_IAM
          # parameter-overrides: "${{ env.PARAMS }}"
          parameter-overrides: >-
            AccountId=${{ secrets.AWS_ACCOUNT_ID }},
            GitHubRepo=${{ github.repository }},
            SourceBucketName=${{ github.event.inputs.SourceBucketName }},
            DataBucketName=${{ github.event.inputs.DataBucketName }}

  deploy-dbt-glue:
    needs: AssumeRole
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ github.event.inputs.region }}

      - name: Install AWS CLI and dbt-glue
        run: |
          pip install awscli dbt-core dbt-glue

      - name: Create dbt profiles.yml
        run: pipeline/create_profiles.sh
        env:
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REGION: ${{ github.event.inputs.region }}
          TARGET_BUCKET: ${{ github.event.inputs.DataBucketName }}

      - name: Run dbt on Glue Interactive Sessions
        run: |
          aws s3 rm s3://${{ github.event.inputs.DataBucketName }}/imba-output/ --recursive    
          dbt run --profiles-dir ~/.dbt/ --project-dir dbt_glue/ --select dbtGlueProject.silver
