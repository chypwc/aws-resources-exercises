name: Deploy CloudFormation Stacks

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      region:
        description: "AWS Region"
        required: true
        default: "ap-southeast-2"
      SourceBucketName:
        description: "S3 Source Bucket Name"
        default: "source-bucket-chien"
        required: true
      DataBucketName:
        description: "S3 Data Bucket Name"
        default: "data-bucket-chien"
        required: true
      deployVpc:
        description: "Deploy VPC Stack?"
        required: true
        default: "false"
      deployS3:
        description: "Deploy S3 Buckets Stack?"
        required: true
        default: "false"
      deployRedshift:
        description: "Deploy Redshift cluster?"
        required: true
        default: "false"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cfn-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Deploy VPC CloudFormation Stack
        id: vpc-stack
        if: ${{ github.event.inputs.deployVpc == 'true' }}
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: vpc-stack
          template: cfn/vpc.yml
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            SourceBucketName=${{ github.event.inputs.SourceBucketName }},
            DataBucketName=${{ github.event.inputs.DataBucketName }}

      - name: Deploy S3 Buckets CloudFormation Stacks
        id: s3-buckets
        if: ${{ github.event.inputs.deployS3 == 'true' }}
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: s3-buckets
          template: cfn/s3.yml
          parameter-overrides: >-
            SourceBucketName=${{ github.event.inputs.SourceBucketName }},
            DataBucketName=${{ github.event.inputs.DataBucketName }}
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy redshift
        id: redshift
        if: ${{ github.event.inputs.deployRedshift == 'true' }}
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: redshift
          template: cfn/redshift.yml
          parameter-overrides: >-
            SourceBucketName=${{ github.event.inputs.SourceBucketName }},
            DataBucketName=${{ github.event.inputs.DataBucketName }}
          capabilities: CAPABILITY_NAMED_IAM

      - name: Deploy Glue Crawler
        id: glue-crawler
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: glue-crawler
          template: cfn/glue-crawler.yml
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            SourceBucketName=${{ github.event.inputs.SourceBucketName }}

  pipeline:
    needs: cfn-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: creds-pipeline
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Run ingestion script
        run: |
          bash pipeline/ingest.sh
        env:
          SourceBucketName: ${{ github.event.inputs.SourceBucketName }}
          CrawlerName: source-csv-crawler
